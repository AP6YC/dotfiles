# -----------------------------------------------------------------------------
#
# Document: .bash_common
#
# Author: Sasha Petrenko <sap625@mst.edu>
# Description:
#
#   This is a bash script. It contains some useful aliases, environment
#   variables, and functions for linux-based development and deployment
#   (especially on the clusters).
#
# -----------------------------------------------------------------------------


# -----------------------------------------------------------------------------
# ALIASES
# -----------------------------------------------------------------------------

alias sme='squeue -u $USER'
alias ir='source ~/.venv/ir/bin/activate'
alias range='python ~/.local/bin/ranger/ranger.py'

# ls aliases
alias ll='ls -alF'
# alias la='ls -A'
alias la='ls -lah'
alias l='ls -CF'

alias tmuxa='tmux new-session -ADs sasha'
alias duda='du -sch .[^.]* *'
alias dudad='du -hcs $(ls -A)'
CUDNN="~/bin/cudnn"

# Chezmoi command
alias cm="$HOME/bin/chezmoi"

# -----------------------------------------------------------------------------
# VARIABLES
# -----------------------------------------------------------------------------

LOG_DIR=$HOME/logs
export OUT_DIR=$LOG_DIR/out
export ERR_DIR=$LOG_DIR/err
mkdir -p $OUT_DIR
mkdir -p $ERR_DIR
export SINGULARITY_CACHEDIR=/lustre/scratch/sap625/.singularity

# -----------------------------------------------------------------------------
# FUNCTIONS
# -----------------------------------------------------------------------------

# Finds the newest file (by enumerated job name) in a directory
find_newest() {
    echo $(find $1 -printf "%f\n" | sort -V | tail -n 2 | head -n 1)
}

# Tails the most recent output log
out() {
    local OUT_FILE=$(find_newest $OUT_DIR)
    echo Tailing $OUT_FILE
    tail -f $OUT_DIR/$OUT_FILE
}

# Lesses the most recent output log
lout() {
    local OUT_FILE=$(find_newest $OUT_DIR)
    echo lessing $OUT_FILE
    less $OUT_DIR/$OUT_FILE
}

# Tails the most recent error log
err() {
    local ERR_FILE=$(find_newest $ERR_DIR)
    echo Tailing $ERR_FILE
    tail -f $ERR_DIR/$ERR_FILE
}

# Lesses the most recent error log
lerr() {
    local ERR_FILE=$(find_newest $ERR_DIR)
    echo lessing $ERR_FILE
    less $ERR_DIR/$ERR_FILE
}

# Clear all logs
clearlogs() {
    rm $OUT_DIR/*.out
    rm $ERR_DIR/*.err
}

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('$HOME/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "$HOME/miniconda3/etc/profile.d/conda.sh" ]; then
        . "$HOME/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="$HOME/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('$HOME/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "$HOME/miniconda3/etc/profile.d/conda.sh" ]; then
        . "$HOME/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="$HOME/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
